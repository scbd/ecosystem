
import { SlicedChart, PictorialStackedSeries } from '@amcharts/amcharts4/charts'
import { create, useTheme                            } from '@amcharts/amcharts4/core'
import   am4themes_animated                            from '@amcharts/amcharts4/themes/animated'

useTheme(am4themes_animated)

let chart
let series
let element
const iconPath = 'M41.7491041,27.7892172 L49.1434638,27.3970842 C62.081773,26.6835477 62.3397279,16.8469378 62.3428483,16.759566 L62.3428483,-5.74387638 L61.2621422,-5.84893058 L61.1993158,-5.57548705 C60.7992582,-3.9614868 58.351729,4.25817285 49.9755763,4.68041292 L41.4963499,5.07878682 C34.3360218,5.43243462 30.7236134,9.82806892 28.9366518,14.0635215 C27.1590515,18.2750509 27.1372086,22.3867268 27.1372086,22.4137704 L27.1372086,38.2062255 C26.9312607,37.5114116 26.7045101,36.8571632 26.4423946,36.2403598 C24.655433,32.0017867 21.0419845,27.610313 13.8837367,27.2504243 L5.40347025,26.856211 C-0.163362372,26.5743329 -3.73104471,22.750776 -5.42855421,17.8974798 L-5.54814295,17.5361556 C-5.78543801,16.7940617 -5.88309566,16.3268675 -5.88309566,16.3268675 L-6.96068135,16.4329618 L-6.95968158,38.9728289 C-6.95426484,39.1155073 -6.92067061,39.7059003 -6.72144901,40.5361405 C-5.26837255,46.6136822 0.239172058,49.2431577 6.23246235,49.5760027 L13.6289023,49.9681357 C24.5243753,50.5734976 26.9697459,62.6505704 27.1372086,64.6518009 L27.1372086,82.4683697 L28.2335168,82.4683697 L28.2416371,82.3007472 C28.3958654,80.3620751 30.8205977,68.2050648 41.7491041,67.5974792 L49.1434638,67.2053462 C62.081773,66.4886893 62.3397279,56.65624 62.3428483,56.5699083 L62.3428483,34.0623053 L61.2621422,33.9582912 L61.1993158,34.2304062 C60.7992582,35.8407434 58.351729,44.0614336 49.9755763,44.4855545 L41.4963499,44.8797678 C34.3360218,45.2417367 30.7236134,49.6363309 28.9366518,53.8717835 C28.6682956,54.5021087 28.4394646,55.1365945 28.2459985,55.7513176 L28.2553597,42.588338 C28.1045393,41.6189269 31.2124795,27.7892172 41.7491041,27.7892172 Z'
//'M48.7097855,54.6791525 L56.1041452,55.0712855 C69.0424544,55.784822 69.3004093,65.6214319 69.3035297,65.7088037 L69.3035297,88.2122461 L68.2228236,88.3173003 C68.2124222,88.2611327 66.2007902,78.2549799 56.9362577,77.7879568 L48.4570313,77.3895829 C41.2967032,77.0359351 37.6842948,72.6403008 35.8973332,68.4048482 C34.1197329,64.1933188 34.09789,60.0816429 34.09789,60.0545993 L34.09789,44.2621442 C33.8919421,44.9569581 33.6651915,45.6112065 33.403076,46.2280099 C31.6161144,50.466583 28.0026659,54.8580567 20.8444181,55.2179454 L12.3641516,55.6121587 C6.79731898,55.8940368 3.22963664,59.7175937 1.53212714,64.5708899 C1.20760327,65.5194981 1.07758569,66.1415022 1.07758569,66.1415022 L0,66.0354079 L0,43.528845 C0,43.528845 0.00936126562,42.8901987 0.239232344,41.9322292 C1.6923088,35.8546875 7.19985341,33.225212 13.1931437,32.892367 L20.5895837,32.500234 C31.4850567,31.8948721 33.9304273,19.8177993 34.09789,17.8165688 L34.09789,0 L35.1941982,0 C35.1941982,1.22320537 37.3909752,14.2416054 48.7097855,14.8708905 L56.1041452,15.2630235 C69.0424544,15.9796804 69.3004093,25.8121297 69.3035297,25.8984614 L69.3035297,48.4060644 L68.2228236,48.5100785 C68.2124222,48.4591116 66.2007902,38.4519186 56.9362577,37.9828152 L48.4570313,37.5886019 C41.2967032,37.226633 37.6842948,32.8320388 35.8973332,28.5965862 C35.628977,27.966261 35.400146,27.3317752 35.2066799,26.7170521 L35.2160411,39.8800317 C35.0652207,40.8494428 38.1731609,54.6791525 48.7097855,54.6791525'

//let iconPath = "M53.5,476c0,14,6.833,21,20.5,21s20.5-7,20.5-21V287h21v189c0,14,6.834,21,20.5,21 c13.667,0,20.5-7,20.5-21V154h10v116c0,7.334,2.5,12.667,7.5,16s10.167,3.333,15.5,0s8-8.667,8-16V145c0-13.334-4.5-23.667-13.5-31 s-21.5-11-37.5-11h-82c-15.333,0-27.833,3.333-37.5,10s-14.5,17-14.5,31v133c0,6,2.667,10.333,8,13s10.5,2.667,15.5,0s7.5-7,7.5-13 V154h10V476 M61.5,42.5c0,11.667,4.167,21.667,12.5,30S92.333,85,104,85s21.667-4.167,30-12.5S146.5,54,146.5,42 c0-11.335-4.167-21.168-12.5-29.5C125.667,4.167,115.667,0,104,0S82.333,4.167,74,12.5S61.5,30.833,61.5,42.5z"

export const pictoral = (elm) => {
  if(!element) element = elm

  chart   = create(element, SlicedChart)
  
  
  createSeries(chart)

  // legand(chart)
}

export const createSeries = (chart) => {
  series = chart.series.push(new PictorialStackedSeries());

  series.dataFields.value = "value";
  series.dataFields.category = "name";
  series.alignLabels = true;
  series.labelsOpposite = false
  series.maskSprite.path = iconPath;
  series.ticks.template.locationX = .5;
  series.ticks.template.locationY = 0.5;

  series.labelsContainer.width = 230;
}



export const getPictoralData = () => {

  chart.dispose()
  chart.hiddenState.properties.opacity = 0 // this makes initial fade in effect
  chart   = create(element, SlicedChart)
  createSeries(chart)

  chart.data = [{
    "name": "TSC",
    "value": Math.floor(Math.random() * 1000)
}, 
{
    "name": "Workshops",
    "value": Math.floor(Math.random() * 1000)
}, 
{
    "name": "Trainings",
    "value": Math.floor(Math.random() * 1000)
}, 
{
    "name": "Research/analysis",
    "value": Math.floor(Math.random() * 1000)
}, 
{
    "name": "Legal/technical support",
    "value": Math.floor(Math.random() * 1000)
}, 
{
    "name": "Matchmaking/fundraising",
    "value": Math.floor(Math.random() * 1000)
}, 
{
    "name": "Institutional",
    "value": Math.floor(Math.random() * 1000)
},
{
  "name": "Tools and resources",
  "value": Math.floor(Math.random() * 1000)
},
{
  "name": "Experiential learning",
  "value": Math.floor(Math.random() * 1000)
}

]

}